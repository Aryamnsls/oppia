// Copyright 2023 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Component for the donate volunteer links in the footer.
 */

import {
  Component,
  ViewEncapsulation,
  Renderer2,
  ElementRef,
  AfterViewInit,
} from '@angular/core';
import {WindowRef} from 'services/contextual/window-ref.service';
import {SiteAnalyticsService} from 'services/site-analytics.service';
import {NavbarAndFooterGATrackingPages} from 'app.constants';

@Component({
  selector: 'oppia-footer-donate-volunteer',
  templateUrl: './footer-donate-volunteer.component.html',
  encapsulation: ViewEncapsulation.None,
})
export class FooterDonateVolunteerComponent implements AfterViewInit {
  constructor(
    private windowRef: WindowRef,
    private siteAnalyticsService: SiteAnalyticsService,
    private renderer: Renderer2,
    private el: ElementRef
  ) {}

  ngAfterViewInit(): void {
    // This lifecycle hook is called after Angular has fully initialized the component's view.
    // We use it to set up click listeners because the HTML generated by [innerHTML]
    // is only available after the view has been rendered.
    setTimeout(() => {
      this.setupClickListeners();
    }, 0);
  }

  setupClickListeners(): void {
    // Find the "Donate" and "Volunteer" links in the dynamically generated HTML.
    // We use querySelector to locate the <a> tags with the specific href attributes.
    const donateLink = this.el.nativeElement.querySelector('a[href="/donate"]');
    const volunteerLink = this.el.nativeElement.querySelector(
      'a[href="/volunteer"]'
    );

    // If link exists, attach a click event listener to it.
    if (donateLink) {
      this.renderer.listen(donateLink, 'click', event => {
        event.preventDefault();
        this.navigateToDonatePage();
      });
    }

    if (volunteerLink) {
      this.renderer.listen(volunteerLink, 'click', event => {
        event.preventDefault();
        this.navigateToVolunteerPage();
      });
    }
  }

  navigateToDonatePage(): void {
    this.siteAnalyticsService.registerClickFooterButtonEvent(
      NavbarAndFooterGATrackingPages.DONATE
    );
    this.windowRef.nativeWindow.location.href = '/donate';
  }

  navigateToVolunteerPage(): void {
    this.siteAnalyticsService.registerClickFooterButtonEvent(
      NavbarAndFooterGATrackingPages.VOLUNTEER
    );
    this.windowRef.nativeWindow.location.href = '/volunteer';
  }
}
